import pywikibot
from googletrans import Translator  # Install googletrans==4.0.0-rc1 for compatibility
import re  # Importing regex for working with <ref></ref> tags

# Initialize translator
translator = Translator()

# Configure your wiki
site = pywikibot.Site('bn', 'wsour')  # Replace 'bn' with the source language wiki code for Bangla
site.login()

def remove_refs(text):
    """
    Remove <ref></ref> tags and return the cleaned text and a list of references.
    Args:
        text (str): The original page text with <ref></ref> tags.
    Returns:
        tuple: A tuple containing the cleaned text and a list of <ref></ref> contents.
    """
    refs = re.findall(r'<ref.*?>(.*?)</ref>', text, re.DOTALL)  # Extract <ref></ref> contents
    cleaned_text = re.sub(r'<ref.*?>.*?</ref>', '', text)  # Remove <ref></ref> tags from text
    return cleaned_text, refs

def restore_refs(text, refs):
    """
    Restore <ref></ref> tags into the translated text.
    Args:
        text (str): The translated page text.
        refs (list): A list of <ref></ref> contents to be re-inserted.
    Returns:
        str: The text with references restored.
    """
    for ref in refs:
        text = text.replace('</ref>', f' {ref}</ref>', 1)  # Reinsert references
    return text

def translate_and_save_category(category_name, source_lang='bn', target_lang='en'):
    """
    Translate and save pages from a specified category from Bangla to English, including titles.
    
    Args:
        category_name (str): Name of the category to fetch pages from.
        source_lang (str): Source language code (default 'bn' for Bangla).
        target_lang (str): Target language code (default 'en' for English).
    """
    # Fetch category
    category = pywikibot.Category(site, f"Category:{category_name}")
    if not category.exists():
        print(f"Category '{category_name}' does not exist.")
        return

    # Iterate over pages in the category
    for page in category.articles():
        print(f"Processing page: {page.title()}")

        # Translate page title
        try:
            translated_title = translator.translate(page.title(), src=source_lang, dest=target_lang).text
            if not translated_title:
                print(f"Translation returned empty title for '{page.title()}', skipping.")
                continue
        except Exception as e:
            print(f"Translation failed for title '{page.title()}': {e}")
            continue

        # Check if the page has content
        if not page.text.strip():
            print(f"Page '{page.title()}' is empty, skipping.")
            continue

        # Remove references and translate page content
        cleaned_text, refs = remove_refs(page.text)
        
        try:
            translated_text = translator.translate(cleaned_text, src=source_lang, dest=target_lang).text
            if not translated_text:
                print(f"Translation returned empty text for '{page.title()}', skipping.")
                continue
        except Exception as e:
            print(f"Translation failed for '{page.title()}': {e}")
            continue

        # Restore <ref></ref> tags in the translated text
        translated_text_with_refs = restore_refs(translated_text, refs)

        # Create or update a new page for the translated content
        translated_page_title = f"{translated_title}"
        translated_page = pywikibot.Page(site, translated_page_title)

        try:
            if translated_page.exists():
                print(f"Page '{translated_page_title}' exists. Updating content.")
            else:
                print(f"Page '{translated_page_title}' does not exist. Creating new page.")
            
            translated_page.text = translated_text_with_refs
            translated_page.save(summary=f"Translated from Bangla to English (title and content) using Pywikibot and Google Translate")
            print(f"Page '{translated_page_title}' updated successfully.")
        except Exception as e:
            print(f"Error saving page '{translated_page_title}': {e}")

# Example usage: Translate and save all pages in a category
translate_and_save_category("জীবিত ব্যক্তি", source_lang='bn', target_lang='en')  # Replace 'Physics' with your Bangla category name
